SELECT	*
FROM	BIKE..BICYCLE

SELECT * FROM BIKE..MODELTYPE
SELECT * FROM BIKE..GROUPO
SELECT * FROM BIKE..PAINT
SELECT * FROM BIKE..BICYCLE
SELECT * FROM BIKE..CITY
--1 List the customers from California who bought red mountain bikes in September 2003.  Use order date as date bought
SELECT	C.CUSTOMERID, C.LASTNAME, C.FIRSTNAME, B.MODELTYPE, PA.COLORLIST, B.ORDERDATE, B.SALESTATE
FROM	BIKE..CUSTOMER C INNER JOIN BIKE..BICYCLE B ON C.CUSTOMERID = B.CUSTOMERID
		INNER JOIN BIKE..PAINT PA ON B.PAINTID = PA.PAINTID
		INNER JOIN BIKE..CITY CT ON C.CITYID = CT.CITYID
WHERE	B.MODELTYPE LIKE 'MOUNTAIN%'
		AND PA.COLORLIST = 'RED'
		AND B.ORDERDATE >= '2003-09-01' AND B.ORDERDATE <= '2003-09-30'
		AND CT.STATE = 'CA'

SELECT	C.CUSTOMERID, C.LASTNAME, C.FIRSTNAME
FROM	BIKE..CUSTOMER C INNER JOIN BIKE..CITY CT ON C.CITYID = CT.CITYID
WHERE	CT.STATE = 'CA'
		AND C.CUSTOMERID = 20621
ORDER BY C.LASTNAME DESC

--2 List the employees who sold race bikes shipped to Wisconsin without the help of a retail store in 2001
SELECT * FROM	BIKE..BICYCLE B
WHERE B.STOREID IS NULL

SELECT	B.EMPLOYEEID, E.LASTNAME, B.SALESTATE, B.MODELTYPE, B.STOREID, B.ORDERDATE
FROM	BIKE..EMPLOYEE E INNER JOIN BIKE..BICYCLE B ON E.EMPLOYEEID = B.EMPLOYEEID
		INNER JOIN BIKE..CUSTOMER C ON C.CUSTOMERID = B.CUSTOMERID
		INNER JOIN BIKE..CITY CT ON C.CITYID = CT.CITYID
WHERE	B.MODELTYPE = 'RACE'
		AND CT.STATE = 'WI'
		AND YEAR(B.ORDERDATE) = '2001'
		AND B.STOREID IS NULL

--3 List all of the (distinct) rear derailleurs installed on road bikes sold in Florida in 2002.
SELECT * FROM BIKE..COMPONENT C
WHERE C.DESCRIPTION LIKE 'FULL SUSPENSION%'
WHERE C.CATEGORY = 'REAR DERAILLEUR'
SELECT * FROM BIKE..GROUPCOMPONENTS
SELECT * FROM BIKE..COMPONENTNAME
SELECT * FROM BIKE..GROUPO
SELECT * FROM BIKE..BIKEPARTS
WHERE	COMPONENTID IN
					(SELECT	COMPONENTID
					 FROM	BIKE..COMPONENT
					 WHERE	CATEGORY LIKE 'REAR%%')
		AND	YEAR(DATEINSTALLED) = '2002'

SELECT	DISTINCT C.COMPONENTID, M.MANUFACTURERNAME, C.PRODUCTNUMBER
FROM	BIKE..COMPONENT C INNER JOIN BIKE..MANUFACTURER M ON C.MANUFACTURERID = M.MANUFACTURERID
		INNER JOIN BIKE..BIKEPARTS BP ON C.COMPONENTID = BP.COMPONENTID
		INNER JOIN BIKE..BICYCLE B ON BP.SERIALNUMBER = B.SERIALNUMBER
WHERE	C.CATEGORY = 'REAR DERAILLEUR'
		AND BP.DATEINSTALLED >= '2002-01-01' AND BP.DATEINSTALLED <= '2002-12-31'
		AND B.MODELTYPE = 'ROAD'
		AND B.SALESTATE = 'FL'


SELECT	DISTINCT C.COMPONENTID, M.MANUFACTURERNAME, C.PRODUCTNUMBER
FROM	BIKE..COMPONENT C INNER JOIN BIKE..MANUFACTURER M ON C.MANUFACTURERID = M.MANUFACTURERID
		INNER JOIN BIKE..BIKEPARTS BP ON C.COMPONENTID = BP.COMPONENTID
		INNER JOIN BIKE..BICYCLE B ON BP.SERIALNUMBER = B.SERIALNUMBER
WHERE	C.CATEGORY = 'REAR DERAILLEUR'
		AND YEAR(BP.DATEINSTALLED) = '2002'
		AND B.MODELTYPE = 'ROAD'
		AND B.SALESTATE = 'FL'

--4 Who bought the largest (frame size) full suspension mountain bike sold in Georgia in 2004?
SELECT TOP 1 SERIALNUMBER, MODELTYPE, SALESTATE, FRAMESIZE, YEAR(B.ORDERDATE) FROM BIKE..BICYCLE B
WHERE	SALESTATE = 'GA'
		AND MODELTYPE = 'MOUNTAIN FULL'
		AND YEAR(ORDERDATE) = '2002'
ORDER BY FRAMESIZE DESC
SELECT * FROM BIKE..MODELSIZE
SELECT * FROM BIKE..MODELTYPE
ORDER BY B.MODELTYPE

SELECT	DISTINCT C.CUSTOMERID, C.LASTNAME, C.FIRSTNAME, B.MODELTYPE, B.SALESTATE, B.FRAMESIZE, B.ORDERDATE
FROM	BIKE..CUSTOMER C INNER JOIN BIKE..BICYCLE B ON C.CUSTOMERID = B.CUSTOMERID
		INNER JOIN BIKE..BIKEPARTS BP ON BP.SERIALNUMBER = B.SERIALNUMBER
		INNER JOIN BIKE..COMPONENT CP ON BP.COMPONENTID = CP.COMPONENTID
WHERE	B.SALESTATE = 'GA'
		AND B.MODELTYPE = 'MOUNTAIN FULL'
		AND B.ORDERDATE >= '2004-01-01' AND B.ORDERDATE <= '2004-12-31'
		AND B.FRAMESIZE = (SELECT	TOP 1 B.FRAMESIZE
						   FROM		BIKE..BICYCLE B
						   WHERE	B.SALESTATE = 'GA'
									AND B.MODELTYPE = 'MOUNTAIN FULL'
									AND B.ORDERDATE >= '2004-01-01' AND B.ORDERDATE <= '2004-12-31'
							ORDER BY B.FRAMESIZE DESC
							)

SELECT	DISTINCT C.CUSTOMERID, C.LASTNAME, C.FIRSTNAME, B.MODELTYPE, B.SALESTATE, B.FRAMESIZE, B.ORDERDATE
FROM	BIKE..CUSTOMER C INNER JOIN BIKE..BICYCLE B ON C.CUSTOMERID = B.CUSTOMERID
		INNER JOIN BIKE..BIKEPARTS BP ON BP.SERIALNUMBER = B.SERIALNUMBER
		INNER JOIN BIKE..COMPONENT CP ON BP.COMPONENTID = CP.COMPONENTID
WHERE	B.FRAMESIZE = (SELECT	TOP 1 B.FRAMESIZE
						   FROM		BIKE..BICYCLE B
						   WHERE	B.SALESTATE = 'GA'
									AND B.MODELTYPE = 'MOUNTAIN FULL'
									AND YEAR(B.ORDERDATE) = '2004'
							ORDER BY B.FRAMESIZE DESC
							)

--5 Which manufacturer gave us the largest discount on an order in 2003?
SELECT * FROM BIKE..PURCHASEORDER PO
WHERE	PO.ORDERDATE >= '2003-01-01' AND PO.ORDERDATE <= '2003-12-31'
ORDER BY PO.DISCOUNT DESC
--WORKS
SELECT	DISTINCT M.MANUFACTURERID, M.MANUFACTURERNAME
FROM	BIKE..PURCHASEORDER PO INNER JOIN BIKE..PURCHASEITEM P ON PO.PURCHASEID = P.PURCHASEID
		INNER JOIN BIKE..COMPONENT C ON P.COMPONENTID = C.COMPONENTID
		INNER JOIN BIKE..MANUFACTURER M ON M.MANUFACTURERID = C.MANUFACTURERID
WHERE	PO.DISCOUNT = (SELECT	MAX(PO.DISCOUNT) AS DISCOUNT
					 FROM		BIKE..PURCHASEORDER PO
					 WHERE	PO.ORDERDATE >= '2003-01-01' AND PO.ORDERDATE <= '2003-12-31'
					 )
--WORKS AS WELL
SELECT	TOP 1 M.MANUFACTURERID, M.MANUFACTURERNAME
FROM	BIKE..PURCHASEORDER PO INNER JOIN BIKE..PURCHASEITEM P ON PO.PURCHASEID = P.PURCHASEID
		INNER JOIN BIKE..COMPONENT C ON P.COMPONENTID = C.COMPONENTID
		INNER JOIN BIKE..MANUFACTURER M ON M.MANUFACTURERID = C.MANUFACTURERID
WHERE	YEAR(PO.ORDERDATE) = '2003'
ORDER BY PO.DISCOUNT DESC

--THIS ONE IS THE SHIT
SELECT	TOP 1 M.MANUFACTURERID, M.MANUFACTURERNAME
FROM	BIKE..PURCHASEORDER P INNER JOIN BIKE..MANUFACTURER M ON P.MANUFACTURERID = M.MANUFACTURERID
WHERE	YEAR(P.ORDERDATE) = '2003'
ORDER BY P.DISCOUNT DESC

--6 What is the most expensive road bike component we stock that has a quantity on hand greater than 200 units?
SELECT * FROM BIKE..BICYCLE B
WHERE B.MODELTYPE = 'ROAD'

SELECT * FROM BIKE..COMPONENT
WHERE ROAD IS NULL

SELECT	C.COMPONENTID, M.MANUFACTURERNAME
FROM	BIKE..COMPONENT C INNER JOIN BIKE..MANUFACTURER M ON C.MANUFACTURERID = M.MANUFACTURERID
WHERE	QUANTITYONHAND > 200
		AND	C.LISTPRICE = (SELECT MAX(LISTPRICE) FROM BIKE..COMPONENT WHERE QUANTITYONHAND > 200)


SELECT	DISTINCT CO.COMPONENTID, M.MANUFACTURERNAME, CO.PRODUCTNUMBER, CO.ROAD, CO.CATEGORY, CO.LISTPRICE, CO.QUANTITYONHAND
FROM	BIKE..COMPONENT CO INNER JOIN BIKE..MANUFACTURER M ON CO.MANUFACTURERID = M.MANUFACTURERID
		INNER JOIN BIKE..BIKEPARTS BP ON BP.COMPONENTID = CO.COMPONENTID
		INNER JOIN BIKE..BICYCLE B ON B.SERIALNUMBER = BP.SERIALNUMBER
WHERE	B.MODELTYPE = 'ROAD'
		AND CO.LISTPRICE =	(SELECT	MAX(CO.LISTPRICE) AS PRICE
							 FROM	BIKE..COMPONENT CO
							 WHERE	CO.QUANTITYONHAND > 200
								AND CO.ROAD = 'ROAD'
							)
--WORKS AS WELL
SELECT	TOP 1 CO.COMPONENTID, M.MANUFACTURERNAME, CO.PRODUCTNUMBER, CO.ROAD, CO.CATEGORY, CO.LISTPRICE, CO.QUANTITYONHAND
FROM	BIKE..COMPONENT CO INNER JOIN BIKE..MANUFACTURER M ON CO.MANUFACTURERID = M.MANUFACTURERID
		INNER JOIN BIKE..BIKEPARTS BP ON BP.COMPONENTID = CO.COMPONENTID
		INNER JOIN BIKE..BICYCLE B ON B.SERIALNUMBER = BP.SERIALNUMBER
WHERE	B.MODELTYPE = 'ROAD'
		AND CO.QUANTITYONHAND > 200
ORDER BY CO.LISTPRICE DESC
						 
						 SELECT	MAX(CO.LISTPRICE) AS PRICE
						 FROM	BIKE..COMPONENT CO INNER JOIN BIKE..BIKEPARTS BP ON CO.COMPONENTID = BP.COMPONENTID
								INNER JOIN BIKE..BICYCLE B ON BP.SERIALNUMBER = B.SERIALNUMBER
						 WHERE	CO.QUANTITYONHAND > 200
								AND B.MODELTYPE = 'ROAD'

						SELECT * FROM BIKE..BICYCLE B INNER JOIN BIKE..BIKEPARTS BP ON B.SERIALNUMBER = BP.SERIALNUMBER
						WHERE BP.COMPONENTID IS NULL
						 
						 SELECT	*
						 FROM	BIKE..COMPONENT CO
						 WHERE	CO.QUANTITYONHAND > 200
								AND CO.ROAD = 'ROAD'
						 ORDER BY CO.LISTPRICE DESC

SELECT	TOP 1 LISTPRICE
FROM	BIKE..COMPONENT CO
WHERE	CO.QUANTITYONHAND > 200
		AND CO.ROAD = 'ROAD'
ORDER BY LISTPRICE DESC
						 
--7 Which inventory item represents the most money sitting on the shelf—based on estimated cost?
SELECT	TOP 1 CO.COMPONENTID, M.MANUFACTURERNAME, CO.PRODUCTNUMBER, CO.CATEGORY, CO.YEAR, 
		(CO.QUANTITYONHAND*CO.ESTIMATEDCOST) AS VALUE
FROM	BIKE..COMPONENT CO INNER JOIN BIKE..MANUFACTURER M ON CO.MANUFACTURERID = M.MANUFACTURERID
ORDER BY CO.QUANTITYONHAND*CO.ESTIMATEDCOST DESC

--8 What is the greatest number of components ever installed in one day by one employee?
SELECT	TOP 1 BP.EMPLOYEEID, E.LASTNAME, BP.DATEINSTALLED, COUNT(BP.COMPONENTID) AS COUNTOFCOMPONENTID
FROM	BIKE..BIKEPARTS BP INNER JOIN BIKE..COMPONENT C ON BP.COMPONENTID = C.COMPONENTID
		INNER JOIN BIKE..EMPLOYEE E ON E.EMPLOYEEID = BP.EMPLOYEEID
WHERE	BP.EMPLOYEEID <> 0     -- NOT INCLUDING BLANK EMPLOYEE ENTRANTS
GROUP BY BP.EMPLOYEEID, E.LASTNAME, BP.DATEINSTALLED
ORDER BY COUNT(BP.COMPONENTID) DESC

SELECT BP.EMPLOYEEID, BP.DATEINSTALLED, COUNT(BP.COMPONENTID) 
FROM	BIKE..BIKEPARTS BP
GROUP BY BP.EMPLOYEEID, BP.DATEINSTALLED
HAVING BP.DATEINSTALLED IS NULL
ORDER BY COUNT(BP.COMPONENTID) DESC

SELECT * FROM BIKE..EMPLOYEE
ORDER BY EMPLOYEEID 

--9 What was the most popular letter style on race bikes in 2003?
SELECT	TOP 1 B.LETTERSTYLEID, COUNT(B.SERIALNUMBER) AS COUNTOFSERIALNUMBER
FROM	BIKE..BICYCLE B
WHERE	YEAR(B.ORDERDATE) = '2003'
		AND B.MODELTYPE LIKE 'RACE%'
GROUP BY B.LETTERSTYLEID
ORDER BY COUNT(B.SERIALNUMBER) DESC

SELECT	B.LETTERSTYLEID, B.SERIALNUMBER
FROM	BIKE..BICYCLE B
WHERE	B.ORDERDATE BETWEEN '2003-01-01' AND '2003-12-31'

SELECT	B.LETTERSTYLEID, COUNT(B.SERIALNUMBER) AS COUNTOFSERIALNUMBER, B.MODELTYPE
FROM	BIKE..BICYCLE B
WHERE	B.ORDERDATE BETWEEN '2003-01-01' AND '2003-12-31'
		AND B.MODELTYPE LIKE 'RACE%'
GROUP BY B.LETTERSTYLEID, B.MODELTYPE
ORDER BY COUNT(B.SERIALNUMBER) DESC


--*****10 Which customer spent the most money with us and how many bicycles did that person buy in 2002?
SELECT	TOP 1 B.CUSTOMERID, C.LASTNAME, C.FIRSTNAME, COUNT(B.SERIALNUMBER) AS [NUMBER OF BIKES],
	 SUM(B.SALEPRICE) AS [AMOUNT SPENT]
FROM	BIKE..BICYCLE B INNER JOIN BIKE..CUSTOMER C ON B.CUSTOMERID = C.CUSTOMERID
WHERE	YEAR(B.ORDERDATE) = '2002'
GROUP BY B.CUSTOMERID, C.LASTNAME, C.FIRSTNAME
ORDER BY SUM(B.SALEPRICE) DESC

SELECT CUSTOMERID, SERIALNUMBER  FROM BIKE..BICYCLE WHERE CUSTOMER

SELECT	TOP 1 C.LASTNAME, SUM(B.SALEPRICE), COUNT(SERIALNUMBER), YEAR(ORDERDATE) 
FROM	BIKE..BICYCLE B INNER JOIN BIKE..CUSTOMER C ON B.CUSTOMERID=C.CUSTOMERID
WHERE	YEAR(ORDERDATE) = '2002'
GROUP BY C.LASTNAME, YEAR(ORDERDATE)
ORDER BY SUM(B.SALEPRICE) DESC

SELECT	TOP 1 C.CUSTOMERID, C.LASTNAME, SUM(B.SALEPRICE)
FROM	BIKE..BICYCLE B INNER JOIN BIKE..CUSTOMER C ON B.CUSTOMERID = C.CUSTOMERID
WHERE	B.ORDERDATE BETWEEN '2002-01-01' AND '2002-12-31'
GROUP BY C.CUSTOMERID, C.LASTNAME
ORDER BY SUM(B.SALEPRICE) DESC

SELECT	TOP 1 C.CUSTOMERID, C.LASTNAME, SUM(B.SALEPRICE)
FROM	BIKE..BICYCLE B INNER JOIN BIKE..CUSTOMER C ON B.CUSTOMERID = C.CUSTOMERID
WHERE	YEAR(B.ORDERDATE) = '2002'
GROUP BY C.CUSTOMERID, C.LASTNAME
ORDER BY SUM(B.SALEPRICE) DESC

SELECT	* FROM BIKE..BICYCLE WHERE YEAR(ORDERDATE) = '2002' AND CUSTOMERID IN (SELECT CUSTOMERID FROM BIKE..CUSTOMER WHERE LASTNAME = 'HUGHES' AND FIRSTNAME = 'HEATHER')

SELECT * FROM BIKE..CUSTOMER WHERE LASTNAME LIKE 'MANN' AND CUSTOMERID IN (SELECT CUSTOMERID FROM BIKE..BICYCLE WHERE YEAR(ORDERDATE) = '2002' AND)

--11 Have the sales of mountain bikes (full suspension or hard tail) 
--   increased or decreased from 2000 to 2004 (by count not by value)?
SELECT	YEAR(B.ORDERDATE) AS [SALE YEAR], COUNT(B.SERIALNUMBER) AS COUNTOFSERIALNUMBER
FROM	BIKE..BICYCLE B
WHERE	YEAR(B.ORDERDATE) BETWEEN '2000' AND '2004'
		AND B.MODELTYPE LIKE 'MOUNTAIN%'
GROUP BY YEAR(B.ORDERDATE)
ORDER BY YEAR(B.ORDERDATE)

SELECT * FROM BIKE..MODELTYPE
SELECT * FROM BIKE..MODELSIZE
SELECT * FROM BIKE..COMPONENT
WHERE DESCRIPTION LIKE 'FULL%'

SELECT	B.MODELTYPE, COUNT(B.SERIALNUMBER) FROM BIKE..BICYCLE B
WHERE	B.MODELTYPE LIKE 'MOUNTAIN%'
		AND B.ORDERDATE BETWEEN '2000-01-01' AND '2000-12-31'
GROUP BY B.MODELTYPE
ORDER BY B.MODELTYPE

SELECT	B.MODELTYPE, COUNT(B.SERIALNUMBER) FROM BIKE..BICYCLE B
WHERE	B.MODELTYPE LIKE 'MOUNTAIN%'
		AND B.ORDERDATE BETWEEN '2001-01-01' AND '2001-12-31'
GROUP BY B.MODELTYPE
ORDER BY B.MODELTYPE

SELECT	B.MODELTYPE, COUNT(B.SERIALNUMBER) FROM BIKE..BICYCLE B
WHERE	B.MODELTYPE LIKE 'MOUNTAIN%'
		AND B.ORDERDATE BETWEEN '2002-01-01' AND '2002-12-31'
GROUP BY B.MODELTYPE
ORDER BY B.MODELTYPE

SELECT	B.MODELTYPE, COUNT(B.SERIALNUMBER) FROM BIKE..BICYCLE B
WHERE	B.MODELTYPE LIKE 'MOUNTAIN%'
		AND B.ORDERDATE BETWEEN '2003-01-01' AND '2003-12-31'
GROUP BY B.MODELTYPE
ORDER BY B.MODELTYPE

SELECT	B.MODELTYPE, COUNT(B.SERIALNUMBER) FROM BIKE..BICYCLE B
WHERE	B.MODELTYPE LIKE 'MOUNTAIN%'
		AND B.ORDERDATE BETWEEN '2004-01-01' AND '2004-12-31'
GROUP BY B.MODELTYPE
ORDER BY B.MODELTYPE

SELECT	* FROM BIKE..COMPONENT 
WHERE DESCRIPTION LIKE '%TAIL%'

SELECT * FROM BIKE..GROUPO

SELECT * FROM BIKE..COMPONENTNAME

--12 Which component did the company spend the most money on in 2003?
-- I THINK THIS ONE IS WRONG(CHECKING INVENTORY VALUE, NOT HOW MUCH COMPANY PAID WHEN BUYING THEM)
SELECT	DISTINCT TOP 1 CO.COMPONENTID, M.MANUFACTURERNAME, CO.PRODUCTNUMBER, CO.CATEGORY, (BP.QUANTITY*CO.ESTIMATEDCOST) AS VALUE
FROM	BIKE..COMPONENT CO INNER JOIN BIKE..MANUFACTURER M ON CO.MANUFACTURERID = M.MANUFACTURERID
		INNER JOIN BIKE..BIKEPARTS BP ON BP.COMPONENTID = CO.COMPONENTID
ORDER BY BP.QUANTITY*CO.ESTIMATEDCOST DESC

SELECT * FROM BIKE..PURCHASEITEM P INNER JOIN BIKE..COMPONENT C ON P.COMPONENTID = C.COMPONENTID

--I THINK THIS ONE WORKS...
SELECT	TOP 1 P.COMPONENTID, M.MANUFACTURERNAME, CO.PRODUCTNUMBER, CO.CATEGORY, SUM(P.PRICEPAID*P.QUANTITY) AS VALUE
FROM	BIKE..COMPONENT CO INNER JOIN BIKE..PURCHASEITEM P ON P.COMPONENTID = CO.COMPONENTID
		INNER JOIN BIKE..PURCHASEORDER PO ON P.PURCHASEID = PO.PURCHASEID
		INNER JOIN BIKE..MANUFACTURER M ON PO.MANUFACTURERID = M.MANUFACTURERID
WHERE	YEAR(PO.ORDERDATE) = '2003'
GROUP BY P.COMPONENTID, M.MANUFACTURERNAME, CO.PRODUCTNUMBER, CO.CATEGORY
ORDER BY SUM(P.PRICEPAID*P.QUANTITY) DESC

SELECT * FROM BIKE..PURCHASEORDER
WHERE YEAR(ORDERDATE) = '2003'
ORDER BY AMOUNTDUE DESC

SELECT	C.COMPONENTID, C.DESCRIPTION, C.CATEGORY, SUM(P.QUANTITY*P.PRICEPAID) AS VALUESPENT
FROM	BIKE..PURCHASEITEM P INNER JOIN BIKE..COMPONENT C ON P.COMPONENTID = C.COMPONENTID
		INNER JOIN BIKE..PURCHASEORDER PO ON P.PURCHASEID = PO.PURCHASEID
WHERE	YEAR(PO.ORDERDATE) = '2003'
GROUP BY C.COMPONENTID, C.DESCRIPTION, C.CATEGORY, PO.ORDERDATE
ORDER BY SUM(P.QUANTITY*P.PRICEPAID) DESC

SELECT P.COMPONENTID, SUM(P.PRICEPAID*P.QUANTITY)
FROM	BIKE..PURCHASEITEM P INNER JOIN BIKE..PURCHASEORDER PO ON P.PURCHASEID = PO.PURCHASEID
WHERE	YEAR(PO.ORDERDATE) = '2003'
GROUP BY P.COMPONENTID
ORDER BY SUM(P.PRICEPAID*P.QUANTITY) DESC

SELECT * FROM BIKE..COMPONENT WHERE COMPONENTID = '213400'

--13 Which employee painted the most red race bikes in May 2003?
SELECT * FROM BIKE..PAINT
SELECT * FROM BIKE..BICYCLE B INNER JOIN BIKE..PAINT P ON B.PAINTID = P.PAINTID --ONLY TWO RACE BIKES PAINTED RED IN MAY 2003, TWO DIFFERENT PAINTERS
WHERE MODELTYPE LIKE 'RACE%'
		AND P.COLORLIST = 'RED'
		AND YEAR(B.STARTDATE) = '2003'
		AND MONTH(B.STARTDATE) = '05'

SELECT	E.EMPLOYEEID, E.LASTNAME, COUNT(B.SERIALNUMBER) AS [NUMBER PAINTED] -- GET TWO ANSWERS, BOTH ONLY PAINTED ONE RED RACE BIKE IN MAY 2003
FROM	BIKE..BICYCLE B INNER JOIN BIKE..EMPLOYEE E ON B.PAINTER = E.EMPLOYEEID
		INNER JOIN BIKE..PAINT P ON P.PAINTID = B.PAINTID
WHERE	P.COLORLIST = 'RED'
		AND B.MODELTYPE LIKE 'RACE%'
		AND YEAR(B.ORDERDATE) = '2003'
		AND MONTH(B.ORDERDATE) = '5'
GROUP BY E.EMPLOYEEID, E.LASTNAME

SELECT	E.EMPLOYEEID, E.LASTNAME, COUNT(B.SERIALNUMBER) AS [NUMBER PAINTED]
FROM	BIKE..BICYCLE B INNER JOIN BIKE..EMPLOYEE E ON B.PAINTER = E.EMPLOYEEID
		INNER JOIN BIKE..PAINT P ON P.PAINTID = B.PAINTID
WHERE	P.COLORLIST = 'RED'
		AND B.MODELTYPE LIKE 'RACE%'
		AND B.ORDERDATE BETWEEN '2003-05-01' AND '2003-05-31'
GROUP BY E.EMPLOYEEID, E.LASTNAME

--14 Which California bike shop helped sell the most bikes (by value) in 2003?
SELECT	TOP 1 RS.STOREID, RS.STORENAME, C.CITY, SUM(B.SALEPRICE)*COUNT(B.SERIALNUMBER) AS SUMOFSALEPRICE
FROM	BIKE..BICYCLE B INNER JOIN BIKE..RETAILSTORE RS ON B.STOREID = RS.STOREID
		INNER JOIN BIKE..CITY C ON RS.CITYID = C.CITYID
WHERE	C.STATE = 'CA'
		AND YEAR(B.ORDERDATE) = '2003'
GROUP BY RS.STOREID, RS.STORENAME, C.CITY
ORDER BY SUM(B.SALEPRICE) DESC

SELECT	TOP 1 RS.STOREID, RS.STORENAME, C.CITY, SUM(B.SALEPRICE) AS SUMOFSALEPRICE
FROM	BIKE..BICYCLE B INNER JOIN BIKE..RETAILSTORE RS ON B.STOREID = RS.STOREID
		INNER JOIN BIKE..CITY C ON RS.CITYID = C.CITYID
WHERE	C.STATE = 'CA'
		AND YEAR(B.ORDERDATE) = '2003'
GROUP BY RS.STOREID, RS.STORENAME, C.CITY
ORDER BY SUM(B.SALEPRICE) DESC

SELECT	RS.STOREID, RS.STORENAME, C.CITY, SUM(B.SALEPRICE) AS SUMOFSALEPRICE, YEAR(B.ORDERDATE)
FROM	BIKE..BICYCLE B INNER JOIN BIKE..RETAILSTORE RS ON B.STOREID = RS.STOREID
		INNER JOIN BIKE..CITY C ON RS.CITYID = C.CITYID
WHERE	C.STATE = 'CA'
		AND YEAR(B.ORDERDATE) = '2003'
GROUP BY RS.STOREID, RS.STORENAME, C.CITY, YEAR(B.ORDERDATE)
ORDER BY SUM(B.SALEPRICE) DESC

SELECT	RS.STOREID, RS.STORENAME, C.CITY, SUM(B.SALEPRICE) AS SUMOFSALEPRICE, YEAR(B.ORDERDATE)
FROM	BIKE..BICYCLE B INNER JOIN BIKE..RETAILSTORE RS ON B.STOREID = RS.STOREID
		INNER JOIN BIKE..CITY C ON RS.CITYID = C.CITYID
WHERE	C.STATE = 'CA'
GROUP BY RS.STOREID, RS.STORENAME, C.CITY, YEAR(B.ORDERDATE)
ORDER BY YEAR(B.ORDERDATE) DESC, SUM(B.SALEPRICE) DESC

--15 What is the total weight of the components on bicycle 11356?
SELECT	SUM(C.WEIGHT * BP.QUANTITY) AS TOTALWEIGHT
FROM	BIKE..BICYCLE B INNER JOIN BIKE..BIKEPARTS BP ON B.SERIALNUMBER = BP.SERIALNUMBER
		INNER JOIN BIKE..COMPONENT C ON BP.COMPONENTID = C.COMPONENTID
WHERE	B.SERIALNUMBER = '11356'

SELECT	B.SERIALNUMBER, BP.COMPONENTID, BP.QUANTITY, C.WEIGHT
FROM	BIKE..BICYCLE B INNER JOIN BIKE..BIKEPARTS BP ON B.SERIALNUMBER = BP.SERIALNUMBER
		INNER JOIN BIKE..COMPONENT C ON BP.COMPONENTID = C.COMPONENTID
WHERE	BP.SERIALNUMBER = '11356'

SELECT * FROM BIKE..GROUPO
SELECT * FROM BIKE..COMPONENT
SELECT	SUM((C.WEIGHT * BP.QUANTITY)) AS TOTALWEIGHT
FROM	BIKE..BIKEPARTS BP INNER JOIN BIKE..COMPONENT C ON BP.COMPONENTID = C.COMPONENTID
WHERE	SERIALNUMBER = '11356'

--16 What is the total list price of all items in the 2002 Campy Record groupo?
SELECT	G.GROUPNAME, SUM(C.LISTPRICE) AS SUMOFLISTPRICE
FROM	BIKE..COMPONENT C INNER JOIN BIKE..GROUPCOMPONENTS GC ON C.COMPONENTID = GC.COMPONENTID
		INNER JOIN BIKE..GROUPO G ON GC.GROUPID = G.COMPONENTGROUPID
WHERE	G.GROUPNAME IN
					 (SELECT	G.GROUPNAME
					  FROM		BIKE..GROUPO G
					  WHERE		G.GROUPNAME LIKE 'CAMPY RECORD 2002'
					 )
GROUP BY G.GROUPNAME

SELECT	G.GROUPNAME, SUM(C.LISTPRICE)
FROM	BIKE..COMPONENT C INNER JOIN BIKE..GROUPCOMPONENTS GC ON C.COMPONENTID = GC.COMPONENTID
		INNER JOIN BIKE..GROUPO G ON GC.GROUPID = G.COMPONENTGROUPID
WHERE	G.GROUPNAME LIKE 'CAMPY RECORD 2002'
GROUP BY G.GROUPNAME

SELECT	C.COMPONENTID, C.LISTPRICE, G.GROUPNAME
FROM	BIKE..COMPONENT C INNER JOIN BIKE..GROUPCOMPONENTS GC ON C.COMPONENTID = GC.COMPONENTID
		INNER JOIN BIKE..GROUPO G ON GC.GROUPID = G.COMPONENTGROUPID
WHERE	G.GROUPNAME LIKE 'CAMPY RECORD 2002'

--17 In 2003, were more race bikes built from carbon or titanium (based on the down tube)?
SELECT * FROM BIKE..MODELTYPE
SELECT * FROM BIKE..BICYCLE

SELECT	T.MATERIAL, COUNT(B.SERIALNUMBER) AS COUNTOFSERIALNUMBER
FROM	BIKE..BICYCLE B INNER JOIN BIKE..BICYCLETUBEUSAGE BT ON B.SERIALNUMBER = BT.SERIALNUMBER
		INNER JOIN BIKE..TUBEMATERIAL T ON BT.TUBEID = T.TUBEID
		INNER JOIN BIKE..BIKETUBES BS ON B.SERIALNUMBER = BS.SERIALNUMBER
WHERE	B.MODELTYPE = 'RACE'
		AND YEAR(B.ORDERDATE) = '2003'
		AND BS.TUBENAME LIKE 'DOWN'
		AND T.MATERIAL IN 
						(SELECT	MATERIAL
						 FROM	BIKE..TUBEMATERIAL 
						 WHERE	MATERIAL LIKE 'CARBON%'
						 OR		MATERIAL LIKE 'TITANIUM'
						 )
GROUP BY T.MATERIAL

SELECT	* 
FROM	BIKE..BIKETUBES
WHERE	TUBEID IN
					(SELECT	TUBEID
					 FROM	BIKE..TUBEMATERIAL
					 WHERE	MATERIAL LIKE 'CARBON%'
							OR MATERIAL LIKE 'TITANIUM'
							)
		AND TUBENAME LIKE 'DOWN'

							SELECT * FROM BIKE..TUBEMATERIAL WHERE MATERIAL LIKE 'TITANIUM'

SELECT	T.MATERIAL, COUNT(B.SERIALNUMBER)
FROM	BIKE..BICYCLE B INNER JOIN BIKE..BICYCLETUBEUSAGE BT ON B.SERIALNUMBER = BT.SERIALNUMBER
		INNER JOIN BIKE..TUBEMATERIAL T ON BT.TUBEID = T.TUBEID
WHERE	B.MODELTYPE = 'RACE'
		AND YEAR(B.ORDERDATE) = '2003'
		AND T.MATERIAL IN
						(SELECT T.MATERIAL
						 FROM BIKE..TUBEMATERIAL T
						 WHERE  T.MATERIAL LIKE 'TITANIUM' OR T.MATERIAL LIKE 'CARBON%'
						 )
GROUP BY T.MATERIAL

--18 What is the average price paid for the 2001 Shimano XTR rear derailleurs?
SELECT	AVG(P.PRICEPAID) AS AVGOFPRICEPAID
FROM	BIKE..COMPONENT C INNER JOIN BIKE..PURCHASEITEM P ON C.COMPONENTID = P.COMPONENTID
		INNER JOIN BIKE..GROUPCOMPONENTS GP ON C.COMPONENTID = GP.COMPONENTID
		INNER JOIN BIKE..GROUPO G ON GP.GROUPID = G.COMPONENTGROUPID
WHERE	G.GROUPNAME = 'SHIMANO XTR 2001'
		AND C.CATEGORY = 'REAR DERAILLEUR'
		

SELECT * FROM BIKE..COMPONENT
WHERE CATEGORY LIKE 'REAR DERAILLEUR'
SELECT * FROM BIKE..GROUPO
WHERE GROUPNAME LIKE 'SHIMANO XTR 2001'

SELECT	C.COMPONENTID, P.PRICEPAID, C.CATEGORY, G.GROUPNAME
FROM	BIKE..COMPONENT C INNER JOIN BIKE..PURCHASEITEM P ON C.COMPONENTID = P.COMPONENTID
		INNER JOIN BIKE..GROUPCOMPONENTS GP ON C.COMPONENTID = GP.COMPONENTID
		INNER JOIN BIKE..GROUPO G ON GP.GROUPID = G.COMPONENTGROUPID
WHERE	C.CATEGORY LIKE 'REAR DERAILLEUR'
		AND G.GROUPNAME LIKE 'SHIMANO XTR 2001'

--19 What is the average top tube length for a 54 cm (frame size) road bike built in 1999?
SELECT	AVG(B.TOPTUBE) AS AVGOFTOPTUBE
FROM	BIKE..BICYCLE B 
WHERE	B.FRAMESIZE = 54
		AND B.MODELTYPE = 'ROAD'
		AND YEAR(B.ORDERDATE) = '1999'

SELECT * FROM BIKE..GROUPO
SELECT	B.TOPTUBE, B.SERIALNUMBER, B.MODELTYPE, B.FRAMESIZE, YEAR(B.ORDERDATE)
FROM	BIKE..BICYCLE B
WHERE	B.FRAMESIZE = 54
		AND B.MODELTYPE = 'ROAD'
		AND YEAR(B.ORDERDATE) = '1999'

--20 On average, which costs (list price) more: road tires or mountain bike tires?
SELECT	* FROM BIKE..TUBEMATERIAL 
SELECT * FROM BIKE..COMPONENT
WHERE	CATEGORY LIKE 'TIRE'

SELECT	C.ROAD, AVG(C.LISTPRICE) AS AVGOFLISTPRICE
FROM	BIKE..COMPONENT C
WHERE	C.CATEGORY = 'TIRE'
GROUP BY C.ROAD
ORDER BY AVG(C.LISTPRICE) DESC

--21 In May 2003, which employees sold road bikes that they also painted?
SELECT	DISTINCT B.EMPLOYEEID, E.LASTNAME
FROM	BIKE..BICYCLE B INNER JOIN BIKE..EMPLOYEE E ON B.EMPLOYEEID = E.EMPLOYEEID
WHERE	B.PAINTER = E.EMPLOYEEID
		AND B.MODELTYPE = 'ROAD'
		AND MONTH(B.ORDERDATE) = '5'
		AND YEAR(B.ORDERDATE) = '2003'

--22 In 2002, was the Old English letter style more popular with some paint jobs?
SELECT * FROM BIKE..BICYCLE
SELECT * FROM BIKE..LETTERSTYLE

SELECT	B.PAINTID, P.COLORNAME, COUNT(B.SERIALNUMBER) AS [NUM OF BIKES PAINTED]
FROM	BIKE..BICYCLE B INNER JOIN BIKE..PAINT P ON B.PAINTID = P.PAINTID
		INNER JOIN BIKE..LETTERSTYLE L ON L.LETTERSTYLE = B.LETTERSTYLEID
WHERE	YEAR(B.ORDERDATE) = '2002'
		AND L.LETTERSTYLE = 'ENGLISH'
GROUP BY B.PAINTID, B.LETTERSTYLEID, P.COLORNAME
ORDER BY COUNT(B.SERIALNUMBER) DESC

SELECT	B.PAINTID, P.COLORNAME, COUNT(B.SERIALNUMBER) AS [NUM OF BIKES PAINTED], B.LETTERSTYLEID
FROM	BIKE..BICYCLE B INNER JOIN BIKE..PAINT P ON B.PAINTID = P.PAINTID
		INNER JOIN BIKE..LETTERSTYLE L ON L.LETTERSTYLE = B.LETTERSTYLEID
WHERE	YEAR(B.ORDERDATE) = '2002'
		AND L.LETTERSTYLE = 'ENGLISH'
GROUP BY B.PAINTID, B.LETTERSTYLEID, P.COLORNAME
ORDER BY COUNT(B.SERIALNUMBER) DESC

--23 Which race bikes in 2003 sold for more than the average price of race bikes in 2002?
SELECT * FROM BIKE..BICYCLE
SELECT * FROM BIKE..MODELTYPE

SELECT	B.SERIALNUMBER, B.MODELTYPE, B.ORDERDATE, B.SALEPRICE
FROM	BIKE..BICYCLE B
WHERE	B.MODELTYPE = 'RACE'
		AND YEAR(B.ORDERDATE) = '2003'
		AND B.SALEPRICE > (SELECT	AVG(SALEPRICE)
						   FROM		BIKE..BICYCLE 
						   WHERE	YEAR(ORDERDATE) = '2002'
									AND MODELTYPE = 'RACE'
						   )
ORDER BY B.SALEPRICE DESC
		
--24 Which component that had no sales (installations) in 2004 has the highest inventory value (cost basis)?
SELECT	DISTINCT TOP 1 M.MANUFACTURERNAME, C.PRODUCTNUMBER, C.CATEGORY, 
		(C.ESTIMATEDCOST * C.QUANTITYONHAND) AS VALUE, C.COMPONENTID
FROM	BIKE..COMPONENT C INNER JOIN BIKE..MANUFACTURER M ON C.MANUFACTURERID = M.MANUFACTURERID
		INNER JOIN BIKE..BIKEPARTS BP ON BP.COMPONENTID = C.COMPONENTID
WHERE	C.COMPONENTID NOT IN 
							 (SELECT	COMPONENTID
							  FROM		BIKE..BIKEPARTS
							  WHERE		YEAR(DATEINSTALLED) = '2004'
							  )
ORDER BY (C.ESTIMATEDCOST * C.QUANTITYONHAND) DESC

SELECT * FROM BIKE..COMPONENT
ORDER BY YEAR, ENDYEAR DESC

SELECT	DISTINCT M.MANUFACTURERNAME, C.PRODUCTNUMBER, C.CATEGORY, 
		(C.ESTIMATEDCOST * C.QUANTITYONHAND) AS VALUE, C.COMPONENTID
FROM	BIKE..COMPONENT C INNER JOIN BIKE..MANUFACTURER M ON C.MANUFACTURERID = M.MANUFACTURERID
		INNER JOIN BIKE..BIKEPARTS BP ON BP.COMPONENTID = C.COMPONENTID
WHERE	C.COMPONENTID NOT IN (SELECT	DISTINCT COMPONENTID
							  FROM		BIKE..BIKEPARTS
							  WHERE		YEAR(DATEINSTALLED) = '2004'
							  )
ORDER BY C.COMPONENTID 

--25 Create a vendor contacts list of all manufacturers and retail stores in California.
-- Include only the columns for VendorName and Phone.
-- The retail stores should only include stores that participated
-- in the sale of at least one bicycle in 2004
		
SELECT	VENDORNAME, PHONE
FROM	(BIKE..MANUFACTURER M INNER JOIN BIKE..CITY CT ON M.CITYID = CT.CITYID) M 
		INNER JOIN (BIKE..RETAILSTORE RS INNER JOIN  BIKE..CITY CT ON RS.CITYID = CT.CITYID
					INNER JOIN BIKE..BICYCLE B ON B.STOREID = RS.STOREID) RS ON 

SELECT	M.MANUFACTURERNAME AS VENDORNAME, M.PHONE AS PHONE
FROM	BIKE..MANUFACTURER M INNER JOIN BIKE..CITY CT ON M.CITYID = CT.CITYID
WHERE	CT.STATE = 'CA'
UNION ALL
SELECT	RS.STORENAME AS VENDORNAME, RS.PHONE AS PHONE
FROM	BIKE..RETAILSTORE RS INNER JOIN BIKE..CITY CT ON RS.CITYID = CT.CITYID
WHERE	CT.STATE = 'CA'
		AND RS.STOREID IN 
						(SELECT	DISTINCT STOREID
						 FROM	BIKE..BICYCLE B
						 WHERE	YEAR(ORDERDATE) = '2004'
						 )

--26 List all of the employees who report to Venetiaan.
SELECT * FROM BIKE..EMPLOYEE
WHERE CURRENTMANAGER = '15293'
WHERE	LASTNAME = 'VENETIAAN'

--SELF JOINING
SELECT	E1.LASTNAME AS MANAGER, E2.EMPLOYEEID, E2.LASTNAME, E2.FIRSTNAME, E2.TITLE
FROM	BIKE..EMPLOYEE E1 INNER JOIN BIKE..EMPLOYEE E2 ON E1.EMPLOYEEID = E2.CURRENTMANAGER
WHERE	E1.LASTNAME = 'VENETIAAN'

--27  List the components where the company 
-- purchased at least 25 percent more units than it used through June 30, 2000.
SELECT	C.COMPONENTID, M.MANUFACTURERNAME, C.PRODUCTNUMBER, C.CATEGORY, SUM(P.QUANTITYRECEIVED) AS TOTALRECEIVED,
		SUM(BP.QUANTITY) AS TOTALUSED, (SUM(P.QUANTITYRECEIVED)/SUM(BP.QUANTITY)) AS NETGAIN, 
		(SUM(P.QUANTITYRECEIVED)/SUM(BP.QUANTITY)*100) AS NETPCT, C.LISTPRICE
FROM	BIKE..BIKEPARTS BP INNER JOIN BIKE..COMPONENT C ON BP.COMPONENTID = C.COMPONENTID
		INNER JOIN BIKE..MANUFACTURER M ON C.MANUFACTURERID = M.MANUFACTURERID
		INNER JOIN BIKE..PURCHASEITEM P ON C.COMPONENTID = P.COMPONENTID
WHERE	C.COMPONENTID IN
						(SELECT	COMPONENTID
						 FROM	BIKE..PURCHASEITEM P INNER JOIN BIKE..PURCHASEORDER PO ON P.PURCHASEID = PO.PURCHASEID
						 WHERE	PO.ORDERDATE < '2000-07-01'
						 )
		AND C.COMPONENTID IN
							(SELECT	COMPONENTID
							 FROM	BIKE..BIKEPARTS
							 WHERE	DATEINSTALLED < '2000-07-01'
							 )
GROUP BY C.COMPONENTID, M.MANUFACTURERNAME, C.PRODUCTNUMBER, C.CATEGORY, C.LISTPRICE
HAVING	SUM(P.QUANTITYRECEIVED) >= (SUM(BP.QUANTITY)*1.25)


SELECT	C.COMPONENTID, M.MANUFACTURERNAME, C.PRODUCTNUMBER, C.CATEGORY, SUM(P.QUANTITYRECEIVED) AS TOTALRECEIVED,
		SUM(BP.QUANTITY) AS TOTALUSED, (P.QUANTITYRECEIVED/BP.QUANTITY) AS NETGAIN, (P.QUANTITYRECEIVED/BP.QUANTITY*100)
		AS NETPCT, C.LISTPRICE
FROM	BIKE..BIKEPARTS BP INNER JOIN BIKE..COMPONENT C ON BP.COMPONENTID = C.COMPONENTID
		INNER JOIN BIKE..MANUFACTURER M ON C.MANUFACTURERID = M.MANUFACTURERID
		INNER JOIN BIKE..PURCHASEITEM P ON C.COMPONENTID = P.COMPONENTID
WHERE	(P.QUANTITYRECEIVED/BP.QUANTITY *100) >= 25
GROUP BY C.COMPONENTID, M.MANUFACTURERNAME, C.PRODUCTNUMBER, C.CATEGORY,
		 (P.QUANTITYRECEIVED/BP.QUANTITY), (P.QUANTITYRECEIVED/BP.QUANTITY*100), C.LISTPRICE

SELECT	(P.QUANTITYRECEIVED/BP.QUANTITY) AS NETGAIN, (P.QUANTITYRECEIVED/BP.QUANTITY*100) AS NETPCT
FROM	BIKE..BIKEPARTS BP INNER JOIN BIKE..COMPONENT C ON BP.COMPONENTID = C.COMPONENTID
		INNER JOIN BIKE..PURCHASEITEM P ON C.COMPONENTID = P.COMPONENTID
WHERE	(P.QUANTITYRECEIVED/BP.QUANTITY*100) >= 25

SELECT * FROM BIKE..BIKEPARTS

SELECT	C.COMPONENTID, SUM(P.QUANTITYRECEIVED) AS TOTALRECEIVED, SUM(BP.QUANTITY) AS TOTALUSED		
FROM	BIKE..BIKEPARTS BP INNER JOIN BIKE..COMPONENT C ON BP.COMPONENTID = C.COMPONENTID
		INNER JOIN BIKE..PURCHASEITEM P ON C.COMPONENTID = P.COMPONENTID
WHERE	C.COMPONENTID IN
							(SELECT	COMPONENTID
							 FROM	BIKE..BIKEPARTS
							 WHERE	DATEINSTALLED < '2000-07-01'
							 )
GROUP BY C.COMPONENTID
HAVING	SUM(P.QUANTITYRECEIVED) >= (1.25*SUM(BP.QUANTITY))

--28 In which years did the average build time for the year exceed the overall average 
-- build time for all years?  The build time is the difference between order date and ship date.

SELECT	YEAR(B.ORDERDATE) AS YEAR, AVG(DATEDIFF(SECOND,B.ORDERDATE,B.SHIPDATE)/3600.0) AS BUILDTIMEINHRS
FROM	BIKE..BICYCLE B
GROUP BY YEAR(B.ORDERDATE)
HAVING	AVG(DATEDIFF(SECOND,B.ORDERDATE,B.SHIPDATE)/3600.0)>
															(SELECT	AVG(BUILDTIMEINHRS)
															 FROM	(SELECT	YEAR(B.ORDERDATE) AS YEAR, 
																			AVG(DATEDIFF(SECOND,B.ORDERDATE,B.SHIPDATE)/3600.0)
																			AS BUILDTIMEINHRS
																	 FROM	BIKE..BICYCLE B
																	 GROUP BY YEAR(B.ORDERDATE)) B
															 )
ORDER BY YEAR(B.ORDERDATE)

SELECT	AVG(BUILDTIMEINHRS)
FROM	(SELECT	YEAR(B.ORDERDATE) AS YEAR, AVG(DATEDIFF(SECOND,B.ORDERDATE,B.SHIPDATE)/3600.0) AS BUILDTIMEINHRS
		 FROM	BIKE..BICYCLE B
		 GROUP BY YEAR(B.ORDERDATE)) B

SELECT	AVG(DATEDIFF(SECOND,B.ORDERDATE,B.SHIPDATE)/3600.0) AS BUILDTIMEINHRS
FROM	BIKE..BICYCLE B
